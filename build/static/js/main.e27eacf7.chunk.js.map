{"version":3,"sources":["Address.js","products/ProductHeader.js","products/ProductRow.js","products/NewProduct.js","products/ProductsSection.js","Date.js","DataSource.js","AppHOC.jsx","App.js","serviceWorker.js","index.js"],"names":["Address","props","className","name","Input","value","address","first_name","placeholder","onChange","e","changeHandler","type","last_name","line_1","line_2","city","state","zip_code","country","ProductHeader","Label","size","ProductRow","product","disabled","product_name","product_id","unit_price","qty","editProduct","total","Button","color","onClick","deleteProduct","NewProduct","selectedProduct","Dropdown","selection","options","selectProductHandler","changeQuantity","ProductsSection","bind","addProduct","random","this","productList","find","setState","alert","products","map","productOptions","primary","Component","handleDateChange","csDate","cb","Date","selected","window","getData","billing_address","shipping_address","order_date","expected_delivery","AppHOC","WrappedComponent","saveForm","changeValue","isValidForm","newState","e1","orderPost","getFullYear","getMonth","getDate","console","log","err","Object","keys","forEach","field","length","path","split","subState","i","element","push","productIndex","findIndex","filteredProducts","filter","order_details","text","floated","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e27eacf7.chunk.js","sourcesContent":["import React from 'react';\nimport { Input }from 'semantic-ui-react';\n\n\nconst Address = (props) => {\n  return (\n    <div className='address'>\n      <div>{props.name}</div>\n      <Input value={props.address.first_name} placeholder='First Name'\n        onChange={(e,{ value }) => props.changeHandler(value, `${props.type}.first_name`)}\n      />\n      <Input value={props.address.last_name} placeholder='Last Name'\n        onChange={(e,{ value }) => props.changeHandler(value, `${props.type}.last_name`)}\n      />\n      <Input value={props.address.line_1} placeholder='Address line 1'\n        onChange={(e,{ value }) => props.changeHandler(value, `${props.type}.line_1`)}\n      />\n      <Input value={props.address.line_2} placeholder='Address line 2'\n        onChange={(e,{ value }) => props.changeHandler(value, `${props.type}.line_2`)}\n      />\n      <Input value={props.address.city} placeholder='City'\n        onChange={(e,{ value }) => props.changeHandler(value, `${props.type}.city`)}\n      />\n      <Input value={props.address.state} placeholder='State'\n        onChange={(e,{ value }) => props.changeHandler(value, `${props.type}.state`)}\n      />\n      <Input value={props.address.zip_code} placeholder='Zipcode'\n      onChange={(e,{ value }) => props.changeHandler(value, `${props.type}.zip_code`)}\n      />\n      <Input value={props.address.country} placeholder='Country'\n      onChange={(e,{ value }) => props.changeHandler(value, `${props.type}.country`)}\n      />\n    </div>\n\n  );\n};\n\nexport default Address;","import React from 'react';\nimport { Label } from 'semantic-ui-react';\n\nconst ProductHeader = () => {\n  return (\n    <div className='flex'>\n      <Label className='product_name' size='small'>Product Name</Label>\n      <Label className='product_id' size='small'>Product ID</Label>\n      <Label className='product_price' size='small'>Unit Price</Label>\n      <Label className='product_qty' size='small'>Product Qty</Label>\n      <Label className='product_total' size='small'>Total Price</Label>\n      <div className='delete'></div>\n    </div>\n  )\n};\n\nexport default ProductHeader;","import React from 'react';\nimport { Button, Input } from 'semantic-ui-react';\n\nconst ProductRow = (props) => {\n  const product = props.product;\n  return (\n    <div className='flex margin--tb'>\n      <Input disabled className='product_name' value={product.product_name} />\n      <Input disabled className='product_id' value={product.product_id} />\n      <Input disabled className='product_price' value={product.unit_price} />\n      <Input className='product_qty' value={product.qty}\n        onChange={(e, {value}) => props.editProduct(product.product_id, value)}/>\n      \n      <Input disabled className='product_total' value={product.total} />\n      <Button size='medium' className='delete' color='red'\n        onClick={() => props.deleteProduct(product.product_id)}>Delete</Button>\n    </div>\n  );\n};\n\nexport default ProductRow;","import React from 'react';\nimport { Input, Dropdown } from 'semantic-ui-react';\n\nconst NewProduct = ( props ) => {\n  const selectedProduct = props.selectedProduct || {\n    product_id: '',\n    product_name: '',\n    unit_price: '',\n    qty: '',\n    total: ''\n  };\n  return (\n    <div className='flex margin--tb'>\n      <Dropdown className='product_name' selection options={ props.options }\n        placeholder='Select Product'\n        value={selectedProduct.product_id}\n        onChange = {props.selectProductHandler}\n      />\n      <Input disabled className='product_id' value={selectedProduct.product_id} />\n      <Input disabled className='product_price' value={selectedProduct.unit_price} />\n      <Input className='product_qty' value={selectedProduct.qty} onChange={props.changeQuantity} />\n      <Input className='product_total' value={selectedProduct.total} />\n      <div className='delete'></div>\n    </div>\n  );\n};\n\nexport default NewProduct;","import React, { Component } from 'react';\nimport { Button } from 'semantic-ui-react';\nimport ProductHeader from './ProductHeader';\nimport ProductRow from './ProductRow';\nimport NewProduct from './NewProduct';\n\nclass ProductsSection extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      selectedProduct: null\n    }\n    this.selectProductHandler = this.selectProductHandler.bind(this);\n    this.addProduct = this.addProduct.bind(this);\n    this.changeQuantity = this.changeQuantity.bind(this);\n  }\n  selectProductHandler(random, { value }) {\n    const selectedProduct = this.props.productList.find((product) => product.product_id === value);\n    if (selectedProduct)\n      this.setState({selectedProduct})\n  }\n  addProduct() {\n    const selectedProduct = this.state.selectedProduct;\n    if (selectedProduct) {\n      this.props.changeHandler(selectedProduct, 'products');\n      this.setState({selectedProduct: null});\n    }\n    else {\n      alert('Please select a product to add');\n    }\n  }\n  changeQuantity(e, { value } ) {\n    const product = {...this.state.selectedProduct};\n    product.qty = value;\n    product.total = value * product.unit_price;\n    this.setState({selectedProduct: product});\n  }\n  render() {\n    return (\n      <div className='Products'>\n        <ProductHeader />\n        {this.props.products.map((product) => {\n          return (\n            <ProductRow product={product} editProduct={this.props.editProduct}\n              deleteProduct={this.props.deleteProduct}\n            />\n          )\n        })}\n        <NewProduct options={this.props.productOptions} selectProductHandler ={this.selectProductHandler}\n         selectedProduct={this.state.selectedProduct} changeQuantity={this.changeQuantity}\n         \n        />\n        <Button primary onClick={ this.addProduct }>Add Product</Button>\n      </div>\n    )\n  }\n};\n\nexport default ProductsSection","import React from 'react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst Date = (props) => {\n  let selected = props.selected || new window.Date();\n  return (\n    <div>\n      <div>{props.type}</div>\n      <DatePicker\n        selected={selected}\n        onChange={(e) =>handleDateChange(e, props.csDate, props.type, props.changeHandler)}\n      />\n    </div>\n  )\n};\n\nconst handleDateChange = (e, csDate, type, cb) => {\n  if (type === 'expected_delivery' && e < csDate)\n    alert('Expected Delivery cannot be less than Order Date');\n  else if ((type === 'order_date' && e > csDate))\n    alert('Order Date cannot be greater than Expected delivery date');\n  else\n    cb(e, type);\n}\n\nexport default Date;","// For a moment we will belive that this data is external data source\nconst getData = {\n  billing_address: {\n    first_name: 'Aman',\n    last_name: 'Jagga',\n    line_1: 'sds',\n    line_2: 'asas',\n    city: 'bangalore',\n    state: 'KA',\n    zip_code: '32323',\n    country: 'India'\n  },\n  shipping_address: {\n    first_name: 'Aman',\n    last_name: 'Jagga',\n    line_1: 'sds',\n    line_2: 'asas',\n    city: 'bangalore',\n    state: 'Punjab',\n    zip_code: '3434',\n    country: 'India'\n  },\n  order_date: '2019-01-03',\n  expected_delivery: '2019-01-03',\n}\n\nexport const products= [{\n  product_id: 100001,\n  product_name: 'sofa',\n  unit_price: 43000\n},{\n  product_id: 100002,\n  product_name: 'table',\n  unit_price: 12000\n},{\n  product_id: 100003,\n  product_name: 'chair',\n  unit_price: 1290\n},\n{\n  product_id: 100004,\n  product_name: 'lamp',\n  unit_price: 110\n},{\n  product_id: 100005,\n  product_name: 'decorators',\n  unit_price: 50\n}];\n\nexport default getData;\n","import React, { Component } from 'react';\nimport order_details, { products } from './DataSource.js';\n\nconst AppHOC = (WrappedComponent) => {\n  class AppState extends Component {\n    constructor() {\n      super();\n      this.state = {\n        billing_address : {},\n        shipping_address : {},\n        order_date: '',\n        expected_delivery: '',\n        products: []\n      }\n      this.productList = [];\n      this.productOptions = []\n      this.saveForm = this.saveForm.bind(this);\n      this.changeValue = this.changeValue.bind(this)\n      this.editProduct = this.editProduct.bind(this);\n      this.deleteProduct = this.deleteProduct.bind(this);\n      this.isValidForm = this.isValidForm.bind(this);\n    }\n    saveForm() {\n      if(this.isValidForm()) {\n        const newState = {...this.state};\n        const e = newState.order_date;\n        const e1 = newState.expected_delivery;\n        const orderPost = {\n          ...newState,\n          order_date: `${e.getFullYear()}-${e.getMonth() + 1}-${e.getDate()}`,\n          expected_delivery: `${e1.getFullYear()}-${e1.getMonth() + 1}-${e1.getDate()}`\n        }\n        console.log(orderPost)\n      }\n    }\n    isValidForm() {\n      const newState = {...this.state};\n      let err = false;\n      Object.keys(newState.billing_address).forEach(field =>{\n        if(!newState.billing_address[field]) {\n          err = true;\n        }\n      })\n      if (err) {\n        alert('Please add all the fields in billing address to proceed');\n        return;\n      }\n      Object.keys(newState.shipping_address).forEach(field =>{\n        if(!newState.shipping_address[field]) {\n          err= true;\n        }\n      })\n      if (err) {\n        alert('Please add all the fields in shipping address to proceed');\n        return;\n      }\n      if (!this.state.order_date || !this.state.expected_delivery) {\n        alert('Please add the order date and expected delivery to proceed')\n        return;\n      }\n        \n      if (!newState.products.length) {\n        alert('Please add the products to order');\n        return;\n      }\n      newState.products.forEach(product => {\n        if (!product.qty) {\n          alert('You forgot to add Qty for your products');\n          return;\n        }\n      });\n      return true;\n    }\n    changeValue(value, path) {\n      let state = { ...this.state }\n      try {\n        const split = path.split('.')\n        let subState = state;\n        for (let i=0; i< split.length; i++) {\n          let element = subState[split[i]];\n          if (i === split.length - 1) {\n            // if it's a array\n            if (typeof element === 'object' && \n              (element.length === 0 || element.length > 0)) {\n                element.push(value)\n            }\n            else {\n              subState[split[i]] = value;\n            } \n          }\n          else\n            subState = element\n        }\n        this.setState({...state})\n      } catch(e) {\n        console.log('error', e);\n      }\n    }\n    editProduct(product_id, qty) {\n      const products = [...this.state.products ];\n      const productIndex = products.findIndex((product) => product.product_id === product_id);\n      products[productIndex].qty = qty;\n      products[productIndex].total = qty * products[productIndex].unit_price;\n      this.setState({ products });\n    }\n    deleteProduct(product_id) {\n      const products = [...this.state.products ];\n      const filteredProducts = products.filter((product) => product.product_id !== product_id);\n      this.setState({products: filteredProducts});\n    }\n    componentDidMount() {\n      // Ideally it should be the api call\n      // but for demo sake this will  behave as a\n      //external source\n      this.setState({\n        billing_address : order_details.billing_address,\n        shipping_address: order_details.shipping_address,\n        order_date: new Date(order_details.order_date),\n        expected_delivery: new Date(order_details.expected_delivery)\n      });\n      this.productList = products;\n      this.productOptions = products.map((product) => {\n        return ({\n          value: product.product_id,\n          text: product.product_name\n        });\n      });\n      this.saveForm = this.saveForm.bind(this);\n    }\n    render() {\n      return (\n        <WrappedComponent {...this.state} productList={this.productList}\n          productOptions={this.productOptions} saveForm={this.saveForm}\n          changeValue={this.changeValue} editProduct={this.editProduct}\n          deleteProduct={this.deleteProduct}\n        />\n      )\n    }\n  }\n  return AppState;\n};\nexport default AppHOC;","import React, { Component } from 'react';\nimport Address from './Address';\nimport ProductsSection from './products/ProductsSection';\nimport './App.scss';\nimport './Utilities.scss';\nimport Date from './Date';\nimport { Button } from 'semantic-ui-react';\nimport AppHOC from './AppHOC';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className='flex'>\n          <div>\n            <Address type='billing_address'\n              name='Billing Address' address={this.props.billing_address}\n              changeHandler={this.props.changeValue}\n            />\n            <Date type={'order_date'} selected={this.props.order_date}\n              changeHandler={this.props.changeValue} csDate={this.props.expected_delivery}\n            />\n          </div>\n          <div>\n            <Address type='shipping_address' address={this.props.shipping_address}\n              name='Shipping Address' changeHandler={this.props.changeValue}\n            />\n            <Date type={'expected_delivery'} selected={this.props.expected_delivery}\n              changeHandler={this.props.changeValue} csDate={this.props.order_date}/>\n          </div>\n        </div>\n        <ProductsSection products={this.props.products} changeHandler={this.props.changeValue}\n          productList={this.props.productList} productOptions={this.props.productOptions}\n          editProduct={this.props.editProduct} deleteProduct={this.props.deleteProduct}\n        />\n        <Button floated='right' primary onClick={this.props.saveForm}>Save Form</Button>\n      </div>\n    );\n  }\n}\n\n\nexport default AppHOC(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}